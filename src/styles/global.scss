@tailwind base;
@tailwind components;
@tailwind utilities;

.grade {
  background: linear-gradient(
    270deg,
    rgba(0, 0, 255, 0.15) 0%,
    #141420 100%
  );
}

#circle {
  width: 300px;
  height: 300px;
  border-radius: 50%;
  border: 2px solid green;
  position: relative;
background-image: url("/images/map.jpg");
background-size: cover;
opacity: .4;



}
#logo {
font-family: 'Roboto', sans-serif;
color: green;
font-size: 38px;
font-weight: bold;
text-transform: uppercase;
display: inline-block;
padding: 10px;
border: 2px solid green;
border-radius: 10px;
background-color:white;
opacity: .65;
}
#flight {
font-family: 'Roboto', sans-serif;
color: green;
font-size: 12px;
font-weight: bold;
text-transform: uppercase;
display: inline-block;
padding: 10px;
}

#logosmall {
  font-family: 'Roboto', sans-serif;
  color: green;
  font-size: 18px;
  font-weight: bold;
  text-transform: uppercase;
  display: inline-block;
  padding: 4px;
  border: 2px solid green;
  border-radius: 10px;
  background-color:white;
  
  }
  #flightsmall {
    font-family: 'Roboto', sans-serif;
    color: green;
    font-size: 8px;
    font-weight: bold;
    text-transform: uppercase;
    display: inline-block;
    padding: 4px;
    margin-left: 6px;
    }
#dot {
  width: 2px;
  height: 2px;
  border-radius: 50%;
  background-color: red;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
#sector {
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  border: 150px solid transparent;
  border-top: 150px solid green;
  border-radius: 50%;
  transform-origin: center;
  clip: rect(0px, 300px, 300px, 150px);
  opacity: 0.7;
transform: rotate(45deg);
  animation: rotate 2s linear infinite;
}
@keyframes rotate {
  from { transform: rotate(45deg); }
  to { transform: rotate(405deg); }
}
h1 {
  color: yellow;
}
i {
  margin-right: 0.5em;
}

.leaflet-container {
  margin-top: 90px;
  height: 820px;
  width: 100%;
  z-index: 10;
  background-color: black;
}

.custom-icon {
  fill: #00ff00;
}



:root {
  --map-tiles-filter: brightness(0.55) invert(1) contrast(5) hue-rotate(190deg) saturate(0.3) brightness(0.5);
}

  .map-tiles {
      filter:var(--map-tiles-filter, none);
}



$background: #1d1e1e;
$chars: "A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","0","1","2","3","4","5","6","7","8","9";


h2 {
  color: yellow;
}
i {
  margin-right: 0.5em;
}
footer {
  color: rgba(255,255,255,0.3);
  font-size: 0.8em;
  margin-top: 2em;
}
a {
  color: rgba(255,255,255,0.3);
}
.departure-board {
  display: inline-flex;
}
.letter {
  background-color: #000;
  border-right: 1px solid $background;
  color: #000;
  display: flex;
  flex-direction: column;
  height: 20px;
  text-align: center;
  width: 20px;
}
.letter::before {
  background-color: #000;
  border-bottom: 1px solid rgba(255,255,255,0.3);
  font-size: 20px;
  height: 10px;
  line-height: 20px;
  overflow: hidden;
  width: 100%;
  z-index: 20;
}
.letter::after {
  background-color: #000;
  flex-grow: 0;
  font-size: 20px;
  height: 20px;
  line-height: 20px;
  margin-top: -50%;
  overflow: hidden;
  width: 100%;
  z-index: 10;
}
/* Blank letter */
.letter-blank::before {
  content: ' ';
}
.letter-blank::after {
  content: ' ';
}
/* dynamic function for character classes */
@each $char in $chars {
  .letter-#{$char}::before {
    content: $char;
  }
  .letter-#{$char}::after {
    content: $char;
  }
}
/* Letter animations */
@for $i from 1 through 50 {
  .departure-board span:nth-child(#{$i}):before {
    animation: flip 1s 1 ease-in-out;
    animation-delay: #{$i/4}s;
    animation-fill-mode: forwards;
    backface-visibility: hidden;
    transform-style:preserve-3d;
    transition-delay: #{$i/4}s;
  }
  .departure-board span:nth-child(#{$i}):after {
    animation: flip 1s 1 ease-in-out;
    animation-delay: #{$i/4}s;
    animation-fill-mode: forwards;
    backface-visibility:hidden;
    transition-delay: #{$i/4}s;
    transform-style:preserve-3d;
  }
}
@keyframes flip {
  0%{
    color: #000;
    transform:rotateX(0deg);
  }
  20%{
    content: nth($chars, random(length($chars)));
    transform:rotateX(360deg);
  }
  40%{
    color: #fff;
    content: nth($chars, random(length($chars)-1));
    transform:rotateX(0deg);
  }
  60%{
    color: #fff;
    content: nth($chars, random(length($chars)-2));
    transform:rotateX(360deg);
  }
  80%{
    color: #fff;
    content: nth($chars, random(length($chars)-3));
    transform:rotateX(0deg);
  }
  100%{
    color: #fff;
    transform:rotateX(360deg);
  }
}
